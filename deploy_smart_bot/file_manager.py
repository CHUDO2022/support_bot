# -*- coding: utf-8 -*-
"""
–ú–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞–º–∏ (Excel –¢–ó, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∫–ª–∞–¥–∞)
"""

import os
import logging
from typing import List, Optional
from pyrogram import Client
from pyrogram.types import InputMediaPhoto, InputMediaVideo

logger = logging.getLogger(__name__)

class FileManager:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞–º–∏ –±–æ—Ç–∞"""
    
    def __init__(self, base_path: str = "."):
        self.base_path = base_path
        self.images_path = os.path.join(base_path, "–ö–∞—Ä—Ç–∏–Ω–∫–∏")
        self.tz_file = os.path.join(base_path, "–¢–ó.xlsx")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞–ø–∫–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
        if not os.path.exists(self.images_path):
            os.makedirs(self.images_path)
            logger.warning(f"–°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {self.images_path}")
    
    def get_tz_file(self) -> Optional[str]:
        """–ü–æ–ª—É—á–∞–µ—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –¢–ó"""
        if os.path.exists(self.tz_file):
            return self.tz_file
        else:
            logger.error(f"–§–∞–π–ª –¢–ó –Ω–µ –Ω–∞–π–¥–µ–Ω: {self.tz_file}")
            return None
    
    def get_warehouse_images(self) -> List[str]:
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å–∫–ª–∞–¥–∞"""
        images = []
        if os.path.exists(self.images_path):
            for file in os.listdir(self.images_path):
                if file.lower().endswith(('.jpg', '.jpeg', '.png', '.gif')):
                    images.append(os.path.join(self.images_path, file))
        return images
    
    def get_warehouse_videos(self) -> List[str]:
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤–∏–¥–µ–æ —Å–∫–ª–∞–¥–∞"""
        videos = []
        if os.path.exists(self.images_path):
            for file in os.listdir(self.images_path):
                if file.lower().endswith(('.mp4', '.avi', '.mov', '.mkv')):
                    videos.append(os.path.join(self.images_path, file))
        return videos
    
    async def send_tz_file(self, client: Client, chat_id: int) -> bool:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª –¢–ó –∫–ª–∏–µ–Ω—Ç—É"""
        try:
            tz_file_path = self.get_tz_file()
            if not tz_file_path:
                await client.send_message(chat_id, "‚ùå –§–∞–π–ª –¢–ó –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
                return False
            
            await client.send_document(
                chat_id=chat_id,
                document=tz_file_path,
                caption="üìã **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ª–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö —É—Å–ª—É–≥**\n\n"
                       "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≤–∞—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–±—Ä–∞—Ç–Ω–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É—Å–ª—É–≥."
            )
            logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ñ–∞–π–ª –¢–ó –≤ —á–∞—Ç {chat_id}")
            return True
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ –¢–ó: {e}")
            await client.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ –¢–ó: {str(e)}")
            return False
    
    async def send_warehouse_images(self, client: Client, chat_id: int) -> bool:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∫–ª–∞–¥–∞ –∫–ª–∏–µ–Ω—Ç—É"""
        try:
            images = self.get_warehouse_images()
            videos = self.get_warehouse_videos()
            
            if not images and not videos:
                await client.send_message(chat_id, "üì∑ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∫–ª–∞–¥–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
                return False
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            if images:
                if len(images) == 1:
                    # –û–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    await client.send_photo(
                        chat_id=chat_id,
                        photo=images[0]
                    )
                else:
                    # –ù–µ—Å–∫–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                    media_group = []
                    for i, img_path in enumerate(images):
                        media_group.append(InputMediaPhoto(media=img_path))
                    
                    await client.send_media_group(chat_id=chat_id, media=media_group)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
            if videos:
                for video_path in videos:
                    await client.send_video(
                        chat_id=chat_id,
                        video=video_path
                    )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–¥—Ä–µ—Å–∞—Ö
            await client.send_message(
                chat_id=chat_id,
                text="üìç **–ê–¥—Ä–µ—Å–∞ —Å–∫–ª–∞–¥–æ–≤:**\n"
                     "‚Ä¢ –ö–∞–∑–∞–Ω—å, —É–ª. –ë–µ–ª–æ–º–æ—Ä—Å–∫–∞—è, 69–ê (—Ñ—É–ª—Ñ–∏–ª–º–µ–Ω—Ç)\n"
                     "‚Ä¢ –ö–∞–∑–∞–Ω—å, —É–ª. –ì–æ—Ä—å–∫–æ–≤—Å–∫–æ–µ –®–æ—Å—Å–µ, 49\n"
                     "https://yandex.ru/maps/-/CHX8J03h"
            )
            
            logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∫–ª–∞–¥–∞ –≤ —á–∞—Ç {chat_id}")
            return True
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å–∫–ª–∞–¥–∞: {e}")
            await client.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {str(e)}")
            return False
    
    async def send_warehouse_images_only(self, client: Client, chat_id: int) -> bool:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∫–ª–∞–¥–∞ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞"""
        try:
            images = self.get_warehouse_images()
            videos = self.get_warehouse_videos()
            
            if not images and not videos:
                return False
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            if images:
                if len(images) == 1:
                    # –û–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    await client.send_photo(
                        chat_id=chat_id,
                        photo=images[0]
                    )
                else:
                    # –ù–µ—Å–∫–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                    media_group = []
                    for img_path in images:
                        media_group.append(InputMediaPhoto(media=img_path))
                    
                    await client.send_media_group(chat_id=chat_id, media=media_group)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
            if videos:
                for video_path in videos:
                    await client.send_video(
                        chat_id=chat_id,
                        video=video_path
                    )
            
            logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∫–ª–∞–¥–∞ –≤ —á–∞—Ç {chat_id}")
            return True
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å–∫–ª–∞–¥–∞: {e}")
            return False

    async def send_warehouse_with_caption(self, client: Client, chat_id: int, caption: str) -> bool:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∫–ª–∞–¥–∞ —Å –ø–æ–¥–ø–∏—Å—å—é"""
        try:
            images = self.get_warehouse_images()
            videos = self.get_warehouse_videos()
            
            if not images and not videos:
                # –ï—Å–ª–∏ –Ω–µ—Ç –º–µ–¥–∏–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
                await client.send_message(chat_id, caption)
                return True
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø–æ–¥–ø–∏—Å—å—é
            if images:
                if len(images) == 1:
                    # –û–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–¥–ø–∏—Å—å—é
                    await client.send_photo(
                        chat_id=chat_id,
                        photo=images[0],
                        caption=caption
                    )
                else:
                    # –ù–µ—Å–∫–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π - –ø–µ—Ä–≤–æ–µ —Å –ø–æ–¥–ø–∏—Å—å—é, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –±–µ–∑
                    media_group = []
                    for i, img_path in enumerate(images):
                        if i == 0:
                            # –ü–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–¥–ø–∏—Å—å—é
                            media_group.append(InputMediaPhoto(media=img_path, caption=caption))
                        else:
                            # –û—Å—Ç–∞–ª—å–Ω—ã–µ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∏
                            media_group.append(InputMediaPhoto(media=img_path))
                    
                    await client.send_media_group(chat_id=chat_id, media=media_group)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –æ—Ç–¥–µ–ª—å–Ω–æ
            if videos:
                for video_path in videos:
                    await client.send_video(
                        chat_id=chat_id,
                        video=video_path
                    )
            
            logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∫–ª–∞–¥–∞ —Å –ø–æ–¥–ø–∏—Å—å—é –≤ —á–∞—Ç {chat_id}")
            return True
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å–∫–ª–∞–¥–∞ —Å –ø–æ–¥–ø–∏—Å—å—é: {e}")
            return False

    async def send_warehouse_info(self, client: Client, chat_id: int) -> bool:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∫–ª–∞–¥–µ (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è + –¢–ó)"""
        try:
            # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            images_sent = await self.send_warehouse_images(client, chat_id)
            
            # –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –¢–ó
            tz_sent = await self.send_tz_file(client, chat_id)
            
            if images_sent or tz_sent:
                await client.send_message(
                    chat_id,
                    "üìç **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**\n\n"
                    "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∞–π–ª –¢–ó –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞\n"
                    "‚Ä¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–º–æ–≥—É—Ç –Ω–∞–π—Ç–∏ –Ω–∞—à —Å–∫–ª–∞–¥\n"
                    "‚Ä¢ –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É"
                )
                return True
            else:
                await client.send_message(chat_id, "‚ùå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∫–ª–∞–¥–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
                return False
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∫–ª–∞–¥–µ: {e}")
            await client.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
            return False

def test_file_manager():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ FileManager"""
    fm = FileManager()
    
    print("üìÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ FileManager")
    print(f"üìã –§–∞–π–ª –¢–ó: {fm.get_tz_file()}")
    print(f"üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {fm.get_warehouse_images()}")
    print(f"üé• –í–∏–¥–µ–æ: {fm.get_warehouse_videos()}")
    
    if fm.get_tz_file():
        print("‚úÖ –§–∞–π–ª –¢–ó –Ω–∞–π–¥–µ–Ω")
    else:
        print("‚ùå –§–∞–π–ª –¢–ó –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    if fm.get_warehouse_images() or fm.get_warehouse_videos():
        print("‚úÖ –ú–µ–¥–∏–∞—Ñ–∞–π–ª—ã —Å–∫–ª–∞–¥–∞ –Ω–∞–π–¥–µ–Ω—ã")
    else:
        print("‚ùå –ú–µ–¥–∏–∞—Ñ–∞–π–ª—ã —Å–∫–ª–∞–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

if __name__ == "__main__":
    test_file_manager()
